<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.opennms.tmforum.swagger</groupId>
		<artifactId>codegen-tests</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>org.opennms.tmforum</groupId>
	<artifactId>tmf656-spm-simulator-war</artifactId>
	<packaging>war</packaging>

	<properties>
	     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	
		<jetty-version>9.3.27.v20190418</jetty-version>
		<jersey2-version>2.22.2</jersey2-version>
		<jackson-version>2.10.1</jackson-version>
		<junit-version>4.12</junit-version>
		<logback-version>1.1.7</logback-version>
		<servlet-api-version>2.5</servlet-api-version>
	
		<!-- works with open api 2.0 or3.0 -->
		<swagger-ui.version>3.25.0</swagger-ui.version>
	     <swagger-core-version>1.5.18</swagger-core-version>
	</properties>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>

			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<stopPort>8079</stopPort>
					<stopKey>stopit</stopKey>
					<stopWait>10</stopWait>
					<httpConnector>
						<port>8080</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<executions>
<!-- 					<execution> -->
<!-- 						<id>start-jetty</id> -->
<!-- 						<phase>pre-integration-test</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>start</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<scanIntervalSeconds>0</scanIntervalSeconds> -->
<!-- 							<daemon>true</daemon> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 					<execution> -->
<!-- 						<id>stop-jetty</id> -->
<!-- 						<phase>post-integration-test</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>stop</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
				</executions>
				<!-- <dependencies> -->
				<!-- <dependency> -->
				<!-- <groupId>org.slf4j</groupId> -->
				<!-- <artifactId>slf4j-log4j12</artifactId> -->
				<!-- <version>1.6.4</version> -->
				<!-- </dependency> -->
				<!-- </dependencies> -->
			</plugin>

			<!-- added for logs in jetty -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>set-system-properties</goal>
						</goals>
						<!-- logback -->
						<configuration>
							<properties>
								<!-- makes jetty log the exception if it fails to initialize slf4j -->
								<property>
									<name>org.eclipse.jetty.util.log.IGNORED</name>
									<value>true</value>
								</property>
								<!-- Location of logback config -->
								<property>
									<name>logback.configurationFile</name>
									<value>./src/main/resources/logback.xml</value>
								</property>
							</properties>
						</configuration>
						<!-- log4j -->
						<!-- <configuration> -->
						<!-- <properties> -->
						<!-- makes jetty log the exception if it fails to initialize slf4j -->
						<!-- <property> -->
						<!-- <name>org.eclipse.jetty.util.log.IGNORED</name> -->
						<!-- <value>true</value> -->
						<!-- </property> -->
						<!-- this tells where the log4j configuration is -->
						<!-- <property> -->
						<!-- <name>log4j.configuration</name> -->
						<!-- <value>file:./src/main/resources/log4j.properties</value> -->
						<!-- </property> -->
						<!-- this can be uncommented to debug startup log4j itself, e.g. -->
						<!-- how it locates log4j.properties etc -->
						<!-- <property> <name>log4j.debug</name> <value></value> </property> -->
						<!-- </properties> -->
						<!-- </configuration> -->
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
            
            <!-- this plugin downloads the swagger ui -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>${swagger-ui.version}</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- This plugin substitutes the correct openapi url to swagger -->
            <!-- see Co-hosting Swagger UI with your Jersey REST API using Maven dependencies   -->
            <!-- https://medium.com/shark-bytes/co-hosting-swagger-ui-with-your-jersey-rest-api-using-maven-dependencies-44d88ae85bf8 -->
            <plugin> 
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>

                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}/index.html</file>
                    <replacements>
                        <replacement>
                            <token>https://petstore.swagger.io/v2/swagger.json</token>
                            <value>/tmf-api/serviceProblemManagement/v3/swagger.json</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            
            <!-- this plugin builds the war including the swagger ui -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>
                            <targetPath>swagger-ui</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
			

			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
			</plugin>
			
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
											<goal>add-resource</goal>
											<goal>add-test-resource</goal>
											<goal>maven-version</goal>
											<goal>parse-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- <execute/> -->
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.opennms.maven.plugins</groupId>
										<artifactId>features-maven-plugin</artifactId>
										<versionRange>[1.0-SNAPSHOT,)</versionRange>
										<goals>
											<goal>generate-features-xml</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>1.0,)</versionRange>
										<goals>
											<goal>set-system-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<dependencies>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<scope>compile</scope>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey2-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey2-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
			<scope>compile</scope>
		</dependency>


		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>



	<repositories>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>
